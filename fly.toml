# fly.toml app configuration file for hatamotohq
# See https://fly.io/docs/reference/configuration/ for information about how to use this file.

app = "hatamotohq"
primary_region = "nrt"

# [build] セクションは、Dockerfileが存在する場合 fly.io が自動的に認識するため、
# 特別な設定がなければ省略可能です。

# 環境変数
# RAILS_MASTER_KEY, DATABASE_URL, REDIS_URL などは `flyctl secrets set` で設定してください。
[env]
  PORT = "8080"  # Fly.ioでは内部ポートに8080を使用するのが一般的です
  RAILS_ENV = "production"
  RAILS_LOG_TO_STDOUT = "true"
  RAILS_SERVE_STATIC_FILES = "true"
  WEB_CONCURRENCY = "2" # CPU数に応じて調整 (cpus=1なら2で十分)
  NODE_OPTIONS = "--max-old-space-size=2048"

# デプロイ時に実行されるマイグレーションコマンド
[deploy]
  release_command = "bundle exec rails db:migrate"

# プロセス定義
# `app` という名前を `web` に変更し、Railsサーバーの起動コマンドをPumaに変更します。
# Pumaの方が本番環境に適しています。
[processes]
  web = "bundle exec puma -C config/puma.rb"
  worker = "bundle exec sidekiq -C config/sidekiq.yml"

# HTTPリクエストを受け付けるサービス設定
# 以前の [http_service] と [[services]] をこちらに統一します。
[[services]]
  protocol = "tcp"
  internal_port = 8080  # 上記の [env] セクションの PORT と一致させます
  processes = ["web"]   # [processes] で定義した "web" プロセスに紐付けます

  [[services.ports]]
    port = 80
    handlers = ["http"]
    force_https = true

  [[services.ports]]
    port = 443
    handlers = ["tls", "http"]

  # ヘルスチェック
  [services.concurrency]
    type = "connections"
    hard_limit = 25
    soft_limit = 20

  [[services.http_checks]]
    interval = "15s"
    timeout = "5s"
    grace_period = "30s" # 起動直後の猶予期間を少し長めに設定
    method = "GET"
    path = "/health" # health_controller.rb で定義されているパス

# マシンのスペック設定
# `[vm]`セクションにまとめます。
[vm]
  cpu_kind = "shared"
  cpus = 1
  memory_mb = 2048

# Fly Volumes のマウント設定
# `storage`ディレクトリを永続化する場合の例です。
# `source`の名前は `fly volumes create <名前>` で作成したものに合わせます。
[[mounts]]
  source = "hatamotohq_storage" # ボリューム名（例）
  destination = "/rails/storage" # Active Storageの永続化先