name: Fly Deploy Development

#on:
#  push:
#    branches:
#      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby 3.3.6
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.6
          bundler-cache: true
          
      - name: Running rubocop
        run: |
          bundle install --jobs 4 --retry 3
          rubocop
          
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          
      - name: Install npm dependencies
        run: npm install
        
      - name: Checking coding convention
        run: |
          npm run lint

      - name: Verify MySQL connection from host
        run: |
          sudo apt-get install -y mysql-client libmysqlclient-dev
          mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e "SHOW GRANTS FOR 'root'@'localhost'"
          
      - name: Bundle Install and Create DB
        env:
          RAILS_ENV: test
          DATABASE_USERNAME: root
          DATABASE_PASSWORD: root
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          cp .env.ci .env
          cp config/database.yml.ci config/database.yml
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3 --path vendor/bundle
          bin/rails db:prepare
          
      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_USERNAME: root
          DATABASE_PASSWORD: root
          DATABASE_HOST: 127.0.0.1
          DATABASE_PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          bundle exec rspec

  deploy:
    needs: test
    runs-on: ubuntu-latest
    concurrency: deploy-dev
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: flyctl deploy --config fly.development.toml --app hatamotohq-dev --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}